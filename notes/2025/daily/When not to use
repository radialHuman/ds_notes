When not to use

1. LLM
    - if it come be dont in a simple way do it
        - it understands language, not numbers
        - ask it to write a function to do some what complicated arithematic and get the output as a fixed number
        - pls no : duplciate finding, form filling, timeseries forcasting
    - Its expansive consider the load on gpus, electricity, water consumption
    - The more you calls you make the slower it becomes
    - mental offloading, will make you an addict
    - use simple code, they are fast, easy to maintian
2. Frameworks
    - There is nothing you can do using simple OOPs that these fancy frameworks claim
        - function calling function (Langchains chains or LCEL)
        - fancy if else (Langraphs nodes and edges)
        - fancy datastructure (ConversationBufferWindowMemory)
        - log monitoring (langsmith)
    - Eval is just asking one llm to examine another one  
        - RAGAS : just prompts
        - Deepeval : the same
3. RAG
    - it a search that has gone to gym
    - where the searching is the most critical peice and LLM is just the cherry on the top
    - Dont use it if you want verbatim
    - Dont use it if you want consistency
    - Has many moving parts, so if you know them then configure it
    - alternative : if your data is small, use it in context
    - if its not able to fit in the window
        - alter it so that the search is easy
            - faq : similarity match
            - metadata based searching
    - Vector database are for similairty which doesn mean realtion
        - use graphs if required
            - but be casreful, its difficult to build
    - concentrate on having a proper ground truth
        - and retrival metrics
4. Agents
    - i dont care what the user is asking, these are all the functions you can call
        - figure it out yourself
    - needs extensive testing, even after deployment
    - What if the user entry is such that it misunderstands and does something incorrect?
    - Does it have a memory? to understand the right context?
        - what if the memory is conflicting?
    - Can it plan well? whats the guarantee?
    - How many times does it use the tool?
        - do you see its logic?
    - How much latency does it add?
    - How many tokens it will generate?
    - How much will it cost, moetarily and environment wise
    solution : Agentic workflow
    - If there are bunch of well known steps which depends on "intelligence"
    - Its a fancy if else statement
    - if the user is asking this, use this function/tool
5. MCP
    - Its just a protocol or a way to call your tools from the server
    - its nothing fancy, or doesn have intelligence
    - is your smartphone smart becase it uses usb c vs usb b?
6. A2A
    - One agent is difficult to control let alone a bunch of them talking to each other

takeaway
    - dont use llm everywhere, the cost is huge.
    - find a simple way like we used to, you are engineers not api callers
    - dont go with the hype, understand the internal mechanism and then choose the right tool
    - dont outsoure your thinking capability
    - if you have been asked to use agent or llms, find out if it actually fits or you are just shoving it
    - trust me I have been in the scenario where because of the hype and pressure
        I have used some fancy new shiny toy and then when it broke spent anxiety filled nights, fixing it unsuccessfully
    - its new, its hyped, its black box-ish so ask
    - building is easy, testing will take the months. 




21 lessons
MIT 16.842 Fundamentals of Systems Engineering, Fall 2015
MIT OpenCourseWare

MIT 6.824 Distributed Systems (Spring 2020)
MIT 6.824: Distributed Systems

MIT 6.172 Performance Engineering of Software Systems, Fall 2018
MIT OpenCourseWare


Understanding the Transformer Architecture
Efficient NLP

LLM Agents MOOC
Berkeley RDI Center on Decentralization & AI

Remember
Private

Vision
Private

Getting Started with Dask
Dask

Intro to Dask Tutorial
Coiled

J_EL
Private

Sec
Private

4
Private

Advanced
Private

1 video
AWS
Private

Building LLMs from scratch
Vizuara

Weaviate Podcast
Weaviate vector database
•

Less use
Private

32 episodes
RAG Masters: A Retrieval Augmented Generation Show
EyeLevel

Tutorial
Private

Pinecone RAG Brag Interview Series | Learn from AI leaders
Pinecone

Ant Colony Optimization (ACO)
Ritika xRay Pixy

MLOps Conference – Keynotes and Panels
Iguazio (Acquired by McKinsey)

The MLOps Live Webinar Series
Iguazio (Acquired by McKinsey)

LangSmith: Production Monitoring & Automations
LangChain

LangSmith Evaluations
LangChain

Experts on AI: LLM Evaluation, Training, & Optimization for Startups
Microsoft for Startups

Stanford CS236: Deep Generative Models I 2023 I Stefano Ermon
Stanford Online

Stanford XCS224U: Natural Language Understanding I Spring 2023
Stanford Online

AWS Generative AI - Amazon Bedrock
GenAI with Rahul Trisal

Fireside Interviews
Fahd Mirza

RAG From Scratch
LangChain

Stanford CS25 - Transformers United
Stanford Online

System Design for Beginners Course
freeCodeCamp.org

Stanford CS149 I Parallel Computing I 2023 I Lecture 7 - GPU architecture and CUDA Programming
Stanford Online

Most AI Career Advice is WRONG (Here's What Actually Works in 2025)
AI News & Strategy Daily | Nate B Jones

STOP Agent: STOP! CaRT = Perfect Knowledge?
Discover AI

3 Ways to Prevent Context Rot in AI Agents
Prompt Engineering

Fine tuning LLMs is so much harder than you think...
youniss

ComoRAG – Next-Gen RAG for Long-Document Reasoning - Demo
Fahd Mirza

Is Responsible AI Possible? with Dr. Sarah Bird
Syntax

Stanford Seminar - Responsible AI (h)as a Learning and Design Problem
Stanford Online

What is Responsible AI? A Guide to AI Governance
IBM Technology

Social engineering, malware, and the future of cybersecurity in AI (pt.1)
Google DeepMind

KV Cache Crash Course
AI Anytime

Asyncio in Python - Full Tutorial
Tech With Tim

Introduction to self attention | Implementing a simplified self-attention | Transformers for Vision
Vizuara

Give Me 30 min, I'll Make Kubernetes Click Forever
Zachary Huang

Text Classification: Handling 1000+ Classes with Generative AI | Amazon Web Services
Amazon Web Services

Haystack EU 2025: Smart Recall: Enhance Local LLM Conversations w/ Embedding-Aware Context Retrieval
OpenSource Connections

Effective Context Engineering for AI Agents
YanAITalk

7B Agent Outsmarts a 200B LLM: AgentFlow by Stanford
Discover AI

India’s Bio-AI Breakthrough: Axis Beats Google DeepMind’s AlphaGenome
AIM Network

Building with MCP and the Claude API
Anthropic

Understanding TRM and HRM
Trelis Research

Evals Aren't Useful? Really?
MLOps.community

Python 3.14 key features
Data Science in your pocket

Self-Improving Evaluations for Agentic RAG
Qdrant Vector Search
•
•
Scheduled for 11/12/25, 9:30 PM


20:40
Now playing
Designing AI Decision Agents with DMN, Machine Learning & Analytics
IBM Technology

Why Your Cloud Isn't Ready for Production AI
Gradient Flow

Less is More: Tiny Recursive Models
The Times of AI

Measuring Agents With Interactive Evaluations
OpenAI

Education in the AI Age: a Teacher Rethinks Learning & Purpose, w/ Johan Falk of Graspable AI
Cognitive Revolution "How AI Changes Everything"

Solving Context Loss: The $20M Problem Every Startup Has
TwoSetAI

How They Built It: Hackathon Winner Deep Dives
Qdrant Vector Search

AWS GenAI LIVE: Transforming Agentic AI with AgentCore & Migration Success Stories
AWS Events

Has This Report EXPOSED THE TRUTH About AI Assisted Software Development?
Modern Software Engineering

Less is More : Recursive Reasoning with Tiny Networks paper summary
Data Science in your pocket

REFRAG Explained!
Weaviate vector database

CEOs Think AI ROI Is Coming Faster
The AI Daily Brief: Artificial Intelligence News

Evals in Action: From Frontier Research to Production Applications
OpenAI

AI isn’t digital transformation, and leaders need to understand why
IBM

Mathematics: The rise of the machines
The Royal Institution

Is Sonnet 4.5 the BEST coding model and more | Episode 1
Rate Limited

The 800 Million User Trap: Why OpenAI's Dev Day Changes Everything (and Nothing)
AI News & Strategy Daily | Nate B Jones

First Level Complexity of an AI AGENT Explained
Discover AI

AI & Cybersecurity: Neil Daswani Interviews Heather Adkins
Stanford Online

Oxford Professor: "AIs are strange new minds"
Machine Learning Street Talk

From RNNs to Transformers - Introduction to attention mechanism | Transformers for Vision
Vizuara

2 years later its still happening
ThePrimeTime

Why OpenAI's AMD Deal Could Be Bigger News than DevDay
The AI Daily Brief: Artificial Intelligence News

I Got AutoGen's #1 Contributor To Reveal AI Agent Secrets
Zachary Huang

5 easy mistakes you’ve made in Python
Indently

The GAN Sidecar: Steroids For Your AI Agents
Richard Aragon

✅Reinforcement Learning | Prof. Rahul Pandya (IIT Dharwad)
Prof. Rahul Pandya - IIT Dharwad

Amazon Bedrock AgentCore Deep dive series: Memory | AWS Show and Tell
AWS Events

Intro to ChatGPT Apps - The NEW App Store??
Alejandro AO - Software & Ai

Stanford CS230 | Autumn 2025 | Lecture 2: Supervised, Self-Supervised, & Weakly Supervised Learning
Stanford Online

How BAML Makes AI AGENTS 10x More RELIABLE? (We grilled the CEO)
YourTechBud Codes and Boundary

Advanced Document Parsing for AI Workflows - Legare Kerrison & Cedric Clyburn
Dallas Software Developers

Rotary Positional Embeddings: Combining Absolute and Relative
Efficient NLP

Deep Learning Vision Architectures Explained – Python Course on CNNs and Vision Transformers
freeCodeCamp.org

DevDay 2025: Apps SDK, Agent Kit, MCP, Codex and why Prompting is More Important than Ever
Latent Space

Learn to build effective Agentic AI systems with Andrew Ng
DeepLearningAI

929: Dragon Hatchling: The Missing Link Between Transformers and the Brain — with Adrian Kosowski
Super Data Science: ML & AI Podcast with Jon Krohn and Pathway (pathway.com)

Making a Deep Agent Competitive Analyst - How & Why
Adam Lucek

From managing people to managing AI: The leadership skills everyone needs now | Julie Zhuo
Lenny's Podcast

Bsides Seattle 2025: Securing RAG: A Pentester's Approach - Rallapalli Nagarjun
Bsides Seattle

Microsoft: forget the IT dept, use Copilot anyway!
Pivot to AI

Explaining Philosophically Why Your AI Can Never Be Conscious Like You Want It To Be
Richard Aragon

The Memory Tool: Letta Agents That Redesign Their Own Architecture
Letta

mem0: Memory layer for LLMs
Peter Jausovec

Build AI Agents with REAL MEMORY (OpenAI + Mem0)
Luuk Alleman

Mem0: Building Production-Ready AI Agents with Scalable Long-Term Memory // May 2025 Reading Group
MLOps.community

Qdrant: Open Source Vector Search Engine and Vector Database (Andrey Vasnetsov)
CMU Database Group

How do vector (search) databases work? ft: turbopuffer
The Geek Narrator

State of the Art of AI Tools in Micro-Frontend Architectures • Luca Mezzalira • GOTO 2025
GOTO Conferences

After Diffusion & FLOW Models: Equilibrium Matching (MIT, Oxford, Harvard)
Discover AI

CWM: Code Generation with World Models: New Agentic Coding: Test and Run Locally
Fahd Mirza

Hyperbolic Computing vs Standard Computing: Why Curved Space Changes Everything
Richard Aragon

Give Me 50 min, I'll Make Integral Calculus Click Forever
Zachary Huang

Inside WIBEY: Walmart's AI Super-Agent Tool | Startup Street | CNBC TV18
CNBC-TV18

Walmart's WIBEY: Revolutionizing Developer Workflows
The AI Opus

Walmart Blasts Past Agent Experimentation
The AI Daily Brief: Artificial Intelligence News

Fortune 100 AI Agent Secrets: The 6 Principles Your Competitors Don't Want You to Know
AI News & Strategy Daily | Nate B Jones

Beyond FOMO — Keeping Up-to-Date in AI
PyData

Enhancing RAG with Fast GraphRAG and InstructLab: A Scalable, Interpretable, and Efficient Framework
PyData

AI Agents of Change: Creating, Reflecting, and Monetizing
PyData

AI in Reality Fireside Chat: Enterprise AI & Open‑Source Innovation
PyData

The Forecast Whisperer: Secrets of Model Tuning Revealed
PyData

From Idea to Integration: An Intro to the Model Context Protocol (MCP)
PyData

Are LLMs the answer to all our problems?
PyData

How Narwhals is silently bringing pandas, Polars, DuckDB, PyArrow, and more together
PyData

What we talk about when we talk about AI skills.
PyData

Securing RAG Pipelines with Fine Grained Authorization
PyData

Modern NLP for Proactive Harmful Content Moderation
PyData

Autonomous Browsing using Large Action Models
PyData

Conquering PDFs: document understanding beyond plain text
PyData

Build a personalized Commute agent in Python with Hopsworks, LangGraph and LLM Function Calling
PyData

Dataframely — A declarative, 🐻‍❄️-native data frame validation library
PyData

Machine Learning Models in a Dynamic Environment
PyData

Composable AI: Building Next-Gen AI Agents with MCP
PyData

Building a HybridRAG Document Question-Answering System
PyData

